version: '3.8'

services:
  front:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8888:8888"
    depends_on:
      - api
    environment:
      - REACT_APP_API_URL=http://api:8080

  api:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - db
      - rabbitmq
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - /app/logs

  worker:
    build:
      context: ./backend
    container_name: celery_worker
    command: ["celery", "-A", "app.tasks", "worker", "--loglevel=info"]
    user: celeryuser
    depends_on:
      - db
      - rabbitmq
    env_file:
      - ./.env

  db:
    image: postgres:13
    container_name: database
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - ./.env

volumes:
  db_data:
